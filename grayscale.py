
# グレースケール画像は、白黒（モノクロ）の画像表現方法です。グレースケール画像では、各ピクセルに対して明るさの情報だけが表現され、色情報は含まれていません。
# 通常のカラー画像では、各ピクセルにはRGB（赤、緑、青）の3つの色成分が含まれます。しかし、グレースケール画像では、ピクセルの明るさを表す単一の値（通常は0から255までの範囲）で表現されます。値が低いほど暗く、値が高いほど明るいピクセルを表します。
# グレースケール画像は、カラー情報が不要な場合や、単純な明るさや濃淡の情報のみが必要な場合に使用されます。例えば、黒と白のコントラストや、階調表現が重要な場合に利用されます。また、画像処理の一部として、画像の輪郭検出や特徴抽出などにも使用されることがあります。
# グレースケール画像は、カラー画像と比較してデータ量が少なく、処理が容易であるという利点もあります。
# カラー画像をグレースケール画像に変換するには、一般的に以下の方法が使用されます：
# 平均法（Average Method）: カラー画像の各ピクセルにおけるRGB値の平均を計算し、その平均値をグレースケール画像のピクセル値とします。つまり、新しいピクセルの値は (R + G + B) / 3 となります。
# 加重平均法（Weighted Average Method）: カラー画像の各ピクセルにおけるRGB値の加重平均を計算し、その値をグレースケール画像のピクセル値とします。RGB値にはそれぞれ異なる重みを掛けますが、一般的には R: 0.2989、G: 0.5870、B: 0.1140 の比率が使われます。
# 輝度法（Luminosity Method）: カラー画像の各ピクセルにおけるRGB値を輝度に変換し、その値をグレースケール画像のピクセル値とします。輝度変換には、一般的に以下の式が使われます：Y = 0.299 * R + 0.587 * G + 0.114 * B。ここで、Yは輝度値を表します。
import numpy as np
import cv2

def convert_to_grayscale(image):
    print(image.shape)
    # カラー画像を加重平均法でグレースケールに変換する
    weighted_average = np.array([0.2989, 0.5870, 0.1140])  # 加重平均法の重み

    # カラー画像を読み込み、各チャンネルの値に重みを掛けて加算する
    grayscale_image = np.dot(image[...,:3], weighted_average)

    print(grayscale_image.shape)
    # ピクセル値を整数に変換して返す
    return grayscale_image.astype(np.uint8)

# カラー画像の読み込み
color_image = cv2.imread('VR.jpg')

# カラー画像をグレースケールに変換
grayscale_image = convert_to_grayscale(color_image)

# グレースケール画像を表示するなどの処理を行う
cv2.imshow('Grayscale Image', grayscale_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
